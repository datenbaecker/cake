% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_boundaries.R
\name{geom_swiss_boundaries}
\alias{geom_swiss_boundaries}
\alias{geom_canton}
\alias{geom_commune}
\alias{geom_plz}
\title{Plot Swiss Boundaries}
\usage{
geom_swiss_boundaries(
  mapping = NULL,
  data = NULL,
  data_provider = default_data_provider(),
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  gov_level = c("canton", "commune", "plz")
)

geom_canton(
  mapping = NULL,
  data = NULL,
  data_provider = default_data_provider(),
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_commune(
  mapping = NULL,
  data = NULL,
  data_provider = default_data_provider(),
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE
)

geom_plz(
  mapping = NULL,
  data = NULL,
  data_provider = default_data_provider(),
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  geometry_type = c("polygon", "point")
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}}.}

\item{data}{Data with the units for plotting}

\item{data_provider}{A cake data provider. Default is \code{\link[cake]{default_data_provider}}.}

\item{position}{A position adjustment to use on the data for this layer. This
can be used in various ways, including to prevent overplotting and
improving the display. The \code{position} argument accepts the following:
\itemize{
\item The result of calling a position function, such as \code{position_jitter()}.
This method allows for passing extra arguments to the position.
\item A string naming the position adjustment. To give the position as a
string, strip the function name of the \code{position_} prefix. For example,
to use \code{position_jitter()}, give the position as \code{"jitter"}.
\item For more information and other ways to specify the position, see the
\link[ggplot2:layer_positions]{layer position} documentation.
}}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}'s \code{params} argument. These
arguments broadly fall into one of 4 categories below. Notably, further
arguments to the \code{position} argument, or aesthetics that are required
can \emph{not} be passed through \code{...}. Unknown arguments that are not part
of the 4 categories below are ignored.
\itemize{
\item Static aesthetics that are not mapped to a scale, but are at a fixed
value and apply to the layer as a whole. For example, \code{colour = "red"}
or \code{linewidth = 3}. The geom's documentation has an \strong{Aesthetics}
section that lists the available options. The 'required' aesthetics
cannot be passed on to the \code{params}. Please note that while passing
unmapped aesthetics as vectors is technically possible, the order and
required length is not guaranteed to be parallel to the input data.
\item When constructing a layer using
a \verb{stat_*()} function, the \code{...} argument can be used to pass on
parameters to the \code{geom} part of the layer. An example of this is
\code{stat_density(geom = "area", outline.type = "both")}. The geom's
documentation lists which parameters it can accept.
\item Inversely, when constructing a layer using a
\verb{geom_*()} function, the \code{...} argument can be used to pass on parameters
to the \code{stat} part of the layer. An example of this is
\code{geom_area(stat = "density", adjust = 0.5)}. The stat's documentation
lists which parameters it can accept.
\item The \code{key_glyph} argument of \code{\link[ggplot2:layer]{layer()}} may also be passed on through
\code{...}. This can be one of the functions described as
\link[ggplot2:draw_key]{key glyphs}, to change the display of the layer in the legend.
}}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{gov_level}{Goverment level (either \dQuote{commune} or \dQuote{canton})}
}
\description{
Plot Swiss Boundaries
}
\section{Aesthetics}{

The only required aesthetics is \code{id} and should contain the
identification for the geographical unit (canton or commune).
If the column is \code{numeric}, the values get interpreted as commune
or canton number according to the definition of the Swiss
Federal Statistical Office (see \url{https://www.bfs.admin.ch/bfs/de/home/grundlagen/agvch/identifikatoren-gemeinde.html}).
Otherwise the column gets interpreted as commune name or
abbreviated canton (ZH, BE, LU, \dots).
The aesthetics \code{x}, \code{y}, \code{group} and \code{subgroup} are ignored.
Otherwise the function supports the same aesthetics as \code{\link[ggplot2]{geom_polygon}}
}

\examples{
\dontrun{
cantons <- tibble(label = c("LU", "ZH"))
ggplot(cantons, aes(id = label)) +
  geom_canton() +
  geom_commune(data = tibble(label = c("Luzern", "ZÃ¼rich", "Zug")), fill = "white", color = "darkgrey")
}

}
